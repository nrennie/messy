% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/unjoin.R
\name{unrbind}
\alias{unrbind}
\alias{uncbind}
\title{Splits a dataframe row-wise or col-wise into any arbitrary number of
dataframes}
\usage{
unrbind(data, sizes = NULL, probs = NULL, names = NULL, shuffle = TRUE)

uncbind(data, sizes = NULL, probs = NULL, names = NULL, shuffle = TRUE)
}
\arguments{
\item{data}{input dataframe}

\item{sizes}{A vector of numeric inputs summing to \code{nrow(data)} for
\code{\link[=unrbind]{unrbind()}} or \code{ncol(data)} for \code{\link[=uncbind]{uncbind()}}; the number of rows of each
resulting dataframe. See \code{probs} for an alternative approach. If neither
are provided, the dataframe will be split roughly in half.}

\item{probs}{A vector of numeric inputs summing to \code{1}; the proportion of
rows/columns in each resulting dataframe. An alternative to \code{sizes}.}

\item{names}{The names of the output list. If \code{NULL} the list will be
unnamed.}

\item{shuffle}{Shuffle rows in \code{\link[=unrbind]{unrbind()}} or columns in \code{\link[=uncbind]{uncbind()}}?
Defaults to \code{TRUE}.}
}
\value{
A list of dataframes
}
\description{
This function splits a dataframe into any number of dataframes such that they
can be rejoined by using \code{\link[=rbind]{rbind()}}/\code{\link[dplyr:bind_rows]{dplyr::bind_rows()}} for \code{\link[=unrbind]{unrbind()}} or
\code{\link[=cbind]{cbind()}}/\code{\link[dplyr:bind_cols]{dplyr::bind_cols()}} for \code{\link[=uncbind]{uncbind()}}. The user may find it
appropriate to go on and apply \code{\link[=messy]{messy()}} to each new dataframe independently
to impede rejoining.
}
\details{
Real data can often be found in disparate files. For example, data reports
may come in monthly and require row-binding together to obtain a complete
annual time series. Scientific results may arrive from different laboratories
and require binding together for further analysis and comparisons. This
function may simulate a single dataframe having come from different sources
and requiring binding back together. Base R's \code{\link[=split]{split()}} offers an alternative
to \code{\link[=unrbind]{unrbind()}}, but requires a pre-existing factor column to split by and
cannot as easily create random splits in the data.
}
\examples{
unrbind(dplyr::tibble(mtcars), probs = c(0.5, 0.3, 0.2))

uncbind(dplyr::tibble(mtcars), probs = c(0.5, 0.3, 0.2))
}
\seealso{
Other data deconstructors: 
\code{\link{unjoin}()}
}
\author{
Jack Davison
}
\concept{data deconstructors}
