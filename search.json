[{"path":"https://nrennie.rbind.io/messy/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicola Rennie. Author, maintainer, copyright holder.","code":""},{"path":"https://nrennie.rbind.io/messy/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rennie N (2025). messy: Create Messy Data Clean Data Frames. R package version 0.1.0.9003, https://nrennie.rbind.io/messy/.","code":"@Manual{,   title = {messy: Create Messy Data from Clean Data Frames},   author = {Nicola Rennie},   year = {2025},   note = {R package version 0.1.0.9003},   url = {https://nrennie.rbind.io/messy/}, }"},{"path":"https://nrennie.rbind.io/messy/index.html","id":"messy-","dir":"","previous_headings":"","what":"Create Messy Data from Clean Data Frames","title":"Create Messy Data from Clean Data Frames","text":"teaching examples using R, instructors often using nice datasets - aren’t realistic, aren’t students later encounter real world. Real datasets typos, missing values encoded strange ways, weird spaces. {messy} R package takes clean dataset, randomly adds things - giving students opportunity practice data cleaning wrangling skills without change examples.","code":""},{"path":"https://nrennie.rbind.io/messy/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create Messy Data from Clean Data Frames","text":"Install CRAN using: Install development version GitHub using:","code":"install.packages(\"messy\") remotes::install_github(\"nrennie/messy\")"},{"path":"https://nrennie.rbind.io/messy/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Create Messy Data from Clean Data Frames","text":"-depth usage instructions, see package documentation nrennie.rbind.io/messy examples function. simplest way use {messy} package applying messy() function: can vary amount messiness function, chain together different functions create customised messy data:","code":"set.seed(1234) messy(ToothGrowth[1:10,]) len supp dose 1   4.2   VC  0.5 2  11.5 <NA> <NA> 3  7.3    VC  0.5 4   5.8  (VC  0.5 5   6.4   VC <NA> 6    10   VC  0.5 7  11.2 <NA>  0.5 8  11.2   VC  0.5 9  5.2    VC  0.5 10    7   VC 0.5 set.seed(1234) ToothGrowth[1:10,] |>    make_missing(cols = \"supp\", missing = \" \") |>    make_missing(cols = c(\"len\", \"dose\"), missing = c(NA, 999)) |>    add_whitespace(cols = \"supp\", messiness = 0.5) |>    add_special_chars(cols = \"supp\") len supp dose 1   4.2   VC  0.5 2  11.5  VC    NA 3   7.3   VC  0.5 4   5.8 *VC   0.5 5   6.4  VC   0.5 6  10.0   VC  0.5 7  11.2       0.5 8  11.2  V#C   NA 9   5.2  !VC  0.5 10  7.0 VC*   0.5"},{"path":"https://nrennie.rbind.io/messy/reference/add_special_chars.html","id":null,"dir":"Reference","previous_headings":"","what":"Add special characters to strings — add_special_chars","title":"Add special characters to strings — add_special_chars","text":"Add special characters strings","code":""},{"path":"https://nrennie.rbind.io/messy/reference/add_special_chars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add special characters to strings — add_special_chars","text":"","code":"add_special_chars(data, cols = NULL, messiness = 0.1)"},{"path":"https://nrennie.rbind.io/messy/reference/add_special_chars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add special characters to strings — add_special_chars","text":"data input dataframe cols set columns apply transformation . NULL apply columns. Default NULL. messiness Percentage values change. Must 0 1. Default 0.1.","code":""},{"path":"https://nrennie.rbind.io/messy/reference/add_special_chars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add special characters to strings — add_special_chars","text":"dataframe size input data.","code":""},{"path":"https://nrennie.rbind.io/messy/reference/add_special_chars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add special characters to strings — add_special_chars","text":"","code":"add_special_chars(mtcars) #>                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2 #> Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1 #> Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4 #> Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #> Merc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2 #> Merc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4 #> Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4 #> Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3 #> Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3 #> Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3 #> Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4 #> Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4 #> Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4 #> Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1 #> Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2 #> Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1 #> Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1 #> Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2 #> AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2 #> Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4 #> Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2 #> Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1 #> Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2 #> Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2 #> Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4 #> Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6 #> Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8 #> Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2"},{"path":"https://nrennie.rbind.io/messy/reference/add_whitespace.html","id":null,"dir":"Reference","previous_headings":"","what":"Add whitespaces — add_whitespace","title":"Add whitespaces — add_whitespace","text":"Randomly add whitespaces end values subset columns.","code":""},{"path":"https://nrennie.rbind.io/messy/reference/add_whitespace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add whitespaces — add_whitespace","text":"","code":"add_whitespace(data, cols = NULL, messiness = 0.1)"},{"path":"https://nrennie.rbind.io/messy/reference/add_whitespace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add whitespaces — add_whitespace","text":"data input dataframe cols set columns apply transformation . NULL apply columns. Default NULL. messiness Percentage values change. Must 0 1. Default 0.1.","code":""},{"path":"https://nrennie.rbind.io/messy/reference/add_whitespace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add whitespaces — add_whitespace","text":"dataframe size input data.","code":""},{"path":"https://nrennie.rbind.io/messy/reference/add_whitespace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add whitespaces — add_whitespace","text":"","code":"add_whitespace(mtcars) #>                       mpg cyl   disp   hp  drat     wt  qsec vs am gear carb #> Mazda RX4             21    6    160  110   3.9   2.62 16.46  0  1    4    4 #> Mazda RX4 Wag          21   6    160  110   3.9  2.875 17.02  0  1   4     4 #> Datsun 710           22.8   4    108   93  3.85   2.32 18.61  1  1    4    1 #> Hornet 4 Drive       21.4   6    258  110  3.08  3.215 19.44  1  0    3    1 #> Hornet Sportabout    18.7   8   360   175  3.15   3.44 17.02  0  0   3    2  #> Valiant              18.1   6    225  105  2.76   3.46 20.22  1  0    3    1 #> Duster 360           14.3   8    360  245 3.21    3.57 15.84 0  0     3    4 #> Merc 240D            24.4   4 146.7    62  3.69   3.19   20   1  0    4   2  #> Merc 230            22.8   4   140.8   95 3.92   3.15   22.9  1  0    4    2 #> Merc 280             19.2   6  167.6  123  3.92   3.44  18.3  1  0    4    4 #> Merc 280C            17.8   6  167.6  123  3.92   3.44  18.9  1  0    4    4 #> Merc 450SE           16.4   8  275.8  180  3.07   4.07  17.4  0  0    3    3 #> Merc 450SL           17.3   8  275.8 180   3.07   3.73 17.6   0  0    3    3 #> Merc 450SLC         15.2    8  275.8  180 3.07    3.78    18 0   0    3    3 #> Cadillac Fleetwood   10.4   8    472  205  2.93   5.25 17.98  0  0    3    4 #> Lincoln Continental  10.4   8    460  215     3  5.424 17.82  0  0   3     4 #> Chrysler Imperial    14.7   8    440  230  3.23  5.345 17.42  0  0    3    4 #> Fiat 128             32.4   4   78.7   66  4.08   2.2  19.47  1 1     4    1 #> Honda Civic          30.4   4   75.7   52  4.93  1.615 18.52  1  1    4    2 #> Toyota Corolla       33.9   4   71.1   65  4.22 1.835   19.9  1  1    4    1 #> Toyota Corona        21.5   4  120.1   97   3.7  2.465 20.01  1  0    3    1 #> Dodge Challenger     15.5   8   318   150  2.76   3.52 16.87  0  0    3    2 #> AMC Javelin         15.2   8     304  150  3.15  3.435  17.3  0  0    3    2 #> Camaro Z28           13.3   8    350  245  3.73   3.84 15.41  0 0     3    4 #> Pontiac Firebird     19.2   8    400  175  3.08  3.845 17.05  0  0    3    2 #> Fiat X1-9            27.3   4     79   66  4.08  1.935  18.9  1  1   4     1 #> Porsche 914-2         26    4  120.3   91  4.43   2.14 16.7   0  1    5    2 #> Lotus Europa         30.4   4   95.1  113  3.77  1.513  16.9  1  1    5    2 #> Ford Pantera L       15.8   8    351  264  4.22   3.17  14.5  0  1   5     4 #> Ferrari Dino         19.7   6    145  175  3.62   2.77  15.5 0   1    5    6 #> Maserati Bora          15   8   301   335  3.54   3.57  14.6  0  1    5    8 #> Volvo 142E           21.4   4    121  109  4.11   2.78  18.6  1 1     4    2"},{"path":"https://nrennie.rbind.io/messy/reference/change_case.html","id":null,"dir":"Reference","previous_headings":"","what":"Change case — change_case","title":"Change case — change_case","text":"Randomly switch title case lowercase character strings","code":""},{"path":"https://nrennie.rbind.io/messy/reference/change_case.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change case — change_case","text":"","code":"change_case(data, cols = NULL, messiness = 0.1, case_type = \"word\")"},{"path":"https://nrennie.rbind.io/messy/reference/change_case.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change case — change_case","text":"data input dataframe cols set columns apply transformation . NULL apply columns. Default NULL. messiness Percentage values change. Must 0 1. Default 0.1. case_type Whether case change based \"word\" \"letter\".","code":""},{"path":"https://nrennie.rbind.io/messy/reference/change_case.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change case — change_case","text":"dataframe size input data.","code":""},{"path":"https://nrennie.rbind.io/messy/reference/change_case.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change case — change_case","text":"","code":"change_case(mtcars) #>                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2 #> Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1 #> Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4 #> Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #> Merc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2 #> Merc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4 #> Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4 #> Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3 #> Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3 #> Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3 #> Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4 #> Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4 #> Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4 #> Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1 #> Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2 #> Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1 #> Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1 #> Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2 #> AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2 #> Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4 #> Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2 #> Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1 #> Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2 #> Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2 #> Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4 #> Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6 #> Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8 #> Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2"},{"path":"https://nrennie.rbind.io/messy/reference/change_separators.html","id":null,"dir":"Reference","previous_headings":"","what":"Change separators — change_separators","title":"Change separators — change_separators","text":"Randomly change separators character strings random replacement","code":""},{"path":"https://nrennie.rbind.io/messy/reference/change_separators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change separators — change_separators","text":"","code":"change_separators(   data,   cols = NULL,   messiness = 0.1,   sep_in = c(\"-\", \"_\", \"  \", \" \"),   sep_out = c(\"-\", \"_\", \"  \", \" \") )"},{"path":"https://nrennie.rbind.io/messy/reference/change_separators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change separators — change_separators","text":"data input dataframe cols set columns apply transformation . NULL apply columns. Default NULL. messiness Percentage values change. Must 0 1. Default 0.1. sep_in single value, vector, list considered separator input data. Default c(\"-\", \"_\", \"  \", \" \"). sep_out single value, vector, list separators may randomly . Default c(\"-\", \"_\", \"  \", \" \").","code":""},{"path":"https://nrennie.rbind.io/messy/reference/change_separators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change separators — change_separators","text":"dataframe size input data.","code":""},{"path":"https://nrennie.rbind.io/messy/reference/change_separators.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change separators — change_separators","text":"","code":"change_separators(mtcars) #>                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2 #> Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1 #> Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4 #> Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #> Merc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2 #> Merc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4 #> Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4 #> Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3 #> Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3 #> Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3 #> Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4 #> Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4 #> Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4 #> Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1 #> Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2 #> Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1 #> Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1 #> Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2 #> AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2 #> Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4 #> Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2 #> Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1 #> Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2 #> Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2 #> Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4 #> Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6 #> Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8 #> Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2"},{"path":"https://nrennie.rbind.io/messy/reference/duplicate_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Duplicate columns and insert them into the dataframe at random — duplicate_columns","title":"Duplicate columns and insert them into the dataframe at random — duplicate_columns","text":"Duplicate columns insert dataframe random","code":""},{"path":"https://nrennie.rbind.io/messy/reference/duplicate_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Duplicate columns and insert them into the dataframe at random — duplicate_columns","text":"","code":"duplicate_columns(data, messiness = 0.1, random = TRUE, name_sep = \"\")"},{"path":"https://nrennie.rbind.io/messy/reference/duplicate_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Duplicate columns and insert them into the dataframe at random — duplicate_columns","text":"data input dataframe messiness Probability column duplicated. Must 0 1. Default 0.1. random Whether duplicated column names randomly selected column names, maintain original. Default TRUE. name_sep Separator use adding numbers end names. Default \"\".","code":""},{"path":"https://nrennie.rbind.io/messy/reference/duplicate_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Duplicate columns and insert them into the dataframe at random — duplicate_columns","text":"dataframe duplicated rows inserted","code":""},{"path":"https://nrennie.rbind.io/messy/reference/duplicate_columns.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Duplicate columns and insert them into the dataframe at random — duplicate_columns","text":"Jordi Rosell","code":""},{"path":"https://nrennie.rbind.io/messy/reference/duplicate_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Duplicate columns and insert them into the dataframe at random — duplicate_columns","text":"","code":"duplicate_columns(mtcars, messiness = 0.1) #>                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb wt453 #> Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4 2.620 #> Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4 2.875 #> Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1 2.320 #> Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1 3.215 #> Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2 3.440 #> Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1 3.460 #> Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4 3.570 #> Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 3.190 #> Merc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2 3.150 #> Merc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4 3.440 #> Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4 3.440 #> Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3 4.070 #> Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3 3.730 #> Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3 3.780 #> Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4 5.250 #> Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4 5.424 #> Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4 5.345 #> Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1 2.200 #> Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2 1.615 #> Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1 1.835 #> Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1 2.465 #> Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2 3.520 #> AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2 3.435 #> Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4 3.840 #> Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2 3.845 #> Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1 1.935 #> Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2 2.140 #> Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2 1.513 #> Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4 3.170 #> Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6 2.770 #> Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8 3.570 #> Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2 2.780"},{"path":"https://nrennie.rbind.io/messy/reference/duplicate_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Duplicate rows and insert them into the dataframe in order or at random. May result in numbers being added to the end of row names. — duplicate_rows","title":"Duplicate rows and insert them into the dataframe in order or at random. May result in numbers being added to the end of row names. — duplicate_rows","text":"Duplicate rows insert dataframe order random. May result numbers added end row names.","code":""},{"path":"https://nrennie.rbind.io/messy/reference/duplicate_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Duplicate rows and insert them into the dataframe in order or at random. May result in numbers being added to the end of row names. — duplicate_rows","text":"","code":"duplicate_rows(data, messiness = 0.1, shuffle = FALSE)"},{"path":"https://nrennie.rbind.io/messy/reference/duplicate_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Duplicate rows and insert them into the dataframe in order or at random. May result in numbers being added to the end of row names. — duplicate_rows","text":"data input dataframe messiness Percentage rows duplicate. Must 0 1. Default 0.1. shuffle Insert duplicated data underneath original data insert randomly","code":""},{"path":"https://nrennie.rbind.io/messy/reference/duplicate_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Duplicate rows and insert them into the dataframe in order or at random. May result in numbers being added to the end of row names. — duplicate_rows","text":"dataframe duplicated rows inserted","code":""},{"path":"https://nrennie.rbind.io/messy/reference/duplicate_rows.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Duplicate rows and insert them into the dataframe in order or at random. May result in numbers being added to the end of row names. — duplicate_rows","text":"Philip Leftwich, Barry Rowlingson","code":""},{"path":"https://nrennie.rbind.io/messy/reference/duplicate_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Duplicate rows and insert them into the dataframe in order or at random. May result in numbers being added to the end of row names. — duplicate_rows","text":"","code":"duplicate_rows(mtcars, messiness = 0.1) #>                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX41          21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2 #> Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1 #> Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4 #> Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #> Merc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2 #> Merc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4 #> Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4 #> Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3 #> Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3 #> Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3 #> Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4 #> Cadillac Fleetwood1 10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4 #> Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4 #> Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4 #> Chrysler Imperial1  14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4 #> Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1 #> Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2 #> Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1 #> Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1 #> Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2 #> AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2 #> Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4 #> Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2 #> Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1 #> Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2 #> Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2 #> Lotus Europa1       30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2 #> Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4 #> Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6 #> Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8 #> Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2"},{"path":"https://nrennie.rbind.io/messy/reference/make_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Make missing — make_missing","title":"Make missing — make_missing","text":"Randomly make values missing data columns, subset columns","code":""},{"path":"https://nrennie.rbind.io/messy/reference/make_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make missing — make_missing","text":"","code":"make_missing(data, cols = NULL, messiness = 0.1, missing = NA)"},{"path":"https://nrennie.rbind.io/messy/reference/make_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make missing — make_missing","text":"data input dataframe cols set columns apply transformation . NULL apply columns. Default NULL. messiness Percentage values change. Must 0 1. Default 0.1. missing single value, vector, list missing values replaced . length greater 1, values replaced randomly. Default NA.","code":""},{"path":"https://nrennie.rbind.io/messy/reference/make_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make missing — make_missing","text":"dataframe size input data.","code":""},{"path":"https://nrennie.rbind.io/messy/reference/make_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make missing — make_missing","text":"","code":"make_missing(mtcars) #>                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4             NA   6 160.0 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag         NA   6 160.0 110   NA 2.875 17.02  0  1    4    4 #> Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive      21.4   6    NA 110 3.08 3.215 19.44 NA  0    3    1 #> Hornet Sportabout   18.7   8 360.0  NA 3.15    NA    NA  0  0    3    2 #> Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1 #> Duster 360          14.3   8    NA 245 3.21 3.570 15.84  0 NA    3    4 #> Merc 240D           24.4   4 146.7  NA 3.69 3.190 20.00  1  0    4    2 #> Merc 230            22.8  NA 140.8  95 3.92 3.150 22.90  1  0    4    2 #> Merc 280            19.2  NA 167.6 123 3.92    NA 18.30  1  0    4    4 #> Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4 #> Merc 450SE          16.4   8 275.8 180 3.07    NA 17.40  0  0    3    3 #> Merc 450SL          17.3   8 275.8 180 3.07 3.730    NA  0  0    3    3 #> Merc 450SLC         15.2  NA 275.8 180 3.07 3.780 18.00  0  0    3    3 #> Cadillac Fleetwood  10.4   8 472.0  NA 2.93 5.250 17.98  0  0    3    4 #> Lincoln Continental 10.4   8 460.0  NA 3.00 5.424 17.82 NA  0    3    4 #> Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4 #> Fiat 128            32.4  NA  78.7  66   NA 2.200 19.47  1  1    4    1 #> Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1   NA    2 #> Toyota Corolla      33.9   4    NA  65 4.22 1.835 19.90  1  1   NA    1 #> Toyota Corona         NA   4 120.1  NA 3.70 2.465 20.01  1  0    3    1 #> Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2 #> AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0   NA    2 #> Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4 #> Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0   NA    2 #> Fiat X1-9           27.3   4  79.0  66 4.08 1.935    NA  1 NA    4   NA #> Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2 #> Lotus Europa          NA   4  95.1  NA 3.77 1.513 16.90  1  1    5   NA #> Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4 #> Ferrari Dino        19.7  NA 145.0 175 3.62 2.770 15.50  0  1    5    6 #> Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8 #> Volvo 142E          21.4   4 121.0 109   NA 2.780 18.60  1  1    4    2"},{"path":"https://nrennie.rbind.io/messy/reference/messy-date-fmt.html","id":null,"dir":"Reference","previous_headings":"","what":"Make date(time) formats inconsistent — messy_datetime_formats","title":"Make date(time) formats inconsistent — messy_datetime_formats","text":"Takes date(times) column transforms character column, sampling number random valid character representations.","code":""},{"path":"https://nrennie.rbind.io/messy/reference/messy-date-fmt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make date(time) formats inconsistent — messy_datetime_formats","text":"","code":"messy_datetime_formats(   data,   cols = NULL,   formats = c(\"%Y/%m/%d %H:%M:%S\", \"%d/%m/%Y %H:%M:%S\") )  messy_date_formats(   data,   cols = NULL,   formats = c(\"%Y/%m/%d\", \"%d/%m/%Y\") )"},{"path":"https://nrennie.rbind.io/messy/reference/messy-date-fmt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make date(time) formats inconsistent — messy_datetime_formats","text":"data input dataframe cols set columns apply transformation . NULL apply POSIXt columns (messy_datetime_formats()) Date columns (messy_date_formats()). formats vector number valid strptime() formats. Multiple formats sampled random.","code":""},{"path":"https://nrennie.rbind.io/messy/reference/messy-date-fmt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make date(time) formats inconsistent — messy_datetime_formats","text":"dataframe size input data.","code":""},{"path":[]},{"path":"https://nrennie.rbind.io/messy/reference/messy-date-fmt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make date(time) formats inconsistent — messy_datetime_formats","text":"Jack Davison","code":""},{"path":"https://nrennie.rbind.io/messy/reference/messy-date-fmt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make date(time) formats inconsistent — messy_datetime_formats","text":"","code":"data <- data.frame(dates = rep(Sys.Date(), 10)) messy_date_formats(data) #>         dates #> 1  15/08/2025 #> 2  15/08/2025 #> 3  2025/08/15 #> 4  2025/08/15 #> 5  2025/08/15 #> 6  2025/08/15 #> 7  15/08/2025 #> 8  2025/08/15 #> 9  2025/08/15 #> 10 15/08/2025"},{"path":"https://nrennie.rbind.io/messy/reference/messy.html","id":null,"dir":"Reference","previous_headings":"","what":"Messy — messy","title":"Messy — messy","text":"Make data frame messier.","code":""},{"path":"https://nrennie.rbind.io/messy/reference/messy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Messy — messy","text":"","code":"messy(   data,   messiness = 0.1,   missing = NA,   case_type = \"word\",   sep_in = c(\"-\", \"_\", \"  \", \" \"),   sep_out = c(\"-\", \"_\", \"  \", \" \") )"},{"path":"https://nrennie.rbind.io/messy/reference/messy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Messy — messy","text":"data input dataframe messiness Percentage values change per function. Must 0 1. Default 0.1. missing single value, vector, list missing values replaced . length greater 1, values replaced randomly. Default NA. case_type Whether case change based \"word\" \"letter\". sep_in single value, vector, list considered separator input data. Default c(\"-\", \"_\", \"  \", \" \"). sep_out single value, vector, list separators may randomly . Default c(\"-\", \"_\", \"  \", \" \").","code":""},{"path":"https://nrennie.rbind.io/messy/reference/messy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Messy — messy","text":"dataframe size input data.","code":""},{"path":"https://nrennie.rbind.io/messy/reference/messy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Messy — messy","text":"","code":"messy(mtcars) #>                       mpg  cyl  disp   hp  drat     wt   qsec   vs   am gear #> Mazda RX4              21    6  <NA>  110   3.9   2.62  16.46    0    1 <NA> #> Mazda RX4 Wag          21    6   160  110   3.9  2.875 17.02     0    1    4 #> Datsun 710           22.8    4   108  93  3.85    2.32  18.61    1    1    4 #> Hornet 4 Drive       21.4    6   258 110   3.08  3.215  19.44    1    0    3 #> Hornet Sportabout    18.7   8_  360   175  3.15   3.44  17.02    0    0    3 #> Valiant              18.1    6   225  105  2.76   <NA>  20.22    1   0     3 #> Duster 360           14.3    8   360  245  3.21   3.57  15.84    0 <NA>    3 #> Merc 240D            24.4    4 146.7   62  3.69   3.19     20 <NA>    0    4 #> Merc 230             22.8    4 140.8   95  3.92   3.15   22.9    1    0    4 #> Merc 280             19.2   6  167.6  123  3.92   3.44   18.3    1    0    4 #> Merc 280C            17.8    6 167.6  123  3.92   3.44   18.9    1 <NA>    4 #> Merc 450SE           16.4    8  <NA>  180  3.07   4.07   17.4    0    0    3 #> Merc 450SL           17.3    8 275.8  180  <NA>  3.73    17.6 <NA>    0    3 #> Merc 450SLC          15.2    8  <NA>  180  3.07   3.78     18    0    0    3 #> Cadillac Fleetwood   10.4    8   472  205  2.93   5.25   <NA>    0    0    3 #> Lincoln Continental 10.4     8   460  215     3   <NA>   <NA>    0 <NA>    3 #> Chrysler Imperial   14.7     8   440  230  3.23  5.345  17.42 <NA>    0    3 #> Fiat 128             32.4 <NA>  78.7  66-  4.08    2.2   <NA>    1    1 <NA> #> Honda Civic         30.4     4  <NA>   52  4.93  1.615   <NA>    1    1    4 #> Toyota Corolla       <NA> <NA>  71.1   65  4.22  1.835   <NA>    1    1 <NA> #> Toyota Corona        21.5 <NA> 120.1   97   3.7 2.465   20.01    1    0    3 #> Dodge Challenger     15.5    8  318  150   2.76   3.52  16.87 <NA>    0    3 #> AMC Javelin          15.2    8  <NA>  150  3.15  3.435   17.3    0    0 <NA> #> Camaro Z28           13.3   8   350   245  3.73   3.84  15.41    0 <NA>    3 #> Pontiac Firebird     19.2    8   400  175  3.08  3.845  17.05    0    0    3 #> Fiat X1-9           27.3     4    79   66 4.08  1.935    18.9    1    1    4 #> Porsche 914-2         26     4 120.3   91  4.43   2.14   16.7    0    1    5 #> Lotus Europa         30.4 <NA>  <NA>  113 3.77    <NA>   16.9    1    1    5 #> Ford Pantera L       15.8    8  351   264 4.22    3.17   14.5    0    1    5 #> Ferrari Dino         19.7   6    145  175  3.62   2.77   15.5    0 <NA>    5 #> Maserati Bora          15    8   301 <NA>  3.54   <NA>   14.6    0    1    5 #> Volvo 142E           21.4    4  <NA>  109  4.11   2.78   18.6    1    1 <NA> #>                     carb #> Mazda RX4             4  #> Mazda RX4 Wag          4 #> Datsun 710             1 #> Hornet 4 Drive         1 #> Hornet Sportabout      2 #> Valiant                1 #> Duster 360            4  #> Merc 240D              2 #> Merc 230               2 #> Merc 280               4 #> Merc 280C              4 #> Merc 450SE            3  #> Merc 450SL             3 #> Merc 450SLC            3 #> Cadillac Fleetwood     4 #> Lincoln Continental   4  #> Chrysler Imperial      4 #> Fiat 128               1 #> Honda Civic            2 #> Toyota Corolla         1 #> Toyota Corona          1 #> Dodge Challenger       2 #> AMC Javelin           2  #> Camaro Z28             4 #> Pontiac Firebird       2 #> Fiat X1-9              1 #> Porsche 914-2          2 #> Lotus Europa           2 #> Ford Pantera L         4 #> Ferrari Dino          6  #> Maserati Bora          8 #> Volvo 142E             2"},{"path":"https://nrennie.rbind.io/messy/reference/messy_colnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Make column names messy — messy_colnames","title":"Make column names messy — messy_colnames","text":"Adds special characters randomly capitalises characters column names data frame.","code":""},{"path":"https://nrennie.rbind.io/messy/reference/messy_colnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make column names messy — messy_colnames","text":"","code":"messy_colnames(data, messiness = 0.2)"},{"path":"https://nrennie.rbind.io/messy/reference/messy_colnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make column names messy — messy_colnames","text":"data data.frame alter column names messiness Percentage values change per function. Must 0 1. Default 0.1.","code":""},{"path":"https://nrennie.rbind.io/messy/reference/messy_colnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make column names messy — messy_colnames","text":"data.frame messy column names","code":""},{"path":"https://nrennie.rbind.io/messy/reference/messy_colnames.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make column names messy — messy_colnames","text":"Athanasia Monika Mowinckel","code":""},{"path":"https://nrennie.rbind.io/messy/reference/messy_colnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make column names messy — messy_colnames","text":"","code":"messy_colnames(mtcars) #>                      mpg cyl dis&p  hp dra%t   &wt q%sec vs am  ge%ar %CARB  #> Mazda RX4           21.0   6 160.0 110  3.90 2.620 16.46  0   1     4      4 #> Mazda RX4 Wag       21.0   6 160.0 110  3.90 2.875 17.02  0   1     4      4 #> Datsun 710          22.8   4 108.0  93  3.85 2.320 18.61  1   1     4      1 #> Hornet 4 Drive      21.4   6 258.0 110  3.08 3.215 19.44  1   0     3      1 #> Hornet Sportabout   18.7   8 360.0 175  3.15 3.440 17.02  0   0     3      2 #> Valiant             18.1   6 225.0 105  2.76 3.460 20.22  1   0     3      1 #> Duster 360          14.3   8 360.0 245  3.21 3.570 15.84  0   0     3      4 #> Merc 240D           24.4   4 146.7  62  3.69 3.190 20.00  1   0     4      2 #> Merc 230            22.8   4 140.8  95  3.92 3.150 22.90  1   0     4      2 #> Merc 280            19.2   6 167.6 123  3.92 3.440 18.30  1   0     4      4 #> Merc 280C           17.8   6 167.6 123  3.92 3.440 18.90  1   0     4      4 #> Merc 450SE          16.4   8 275.8 180  3.07 4.070 17.40  0   0     3      3 #> Merc 450SL          17.3   8 275.8 180  3.07 3.730 17.60  0   0     3      3 #> Merc 450SLC         15.2   8 275.8 180  3.07 3.780 18.00  0   0     3      3 #> Cadillac Fleetwood  10.4   8 472.0 205  2.93 5.250 17.98  0   0     3      4 #> Lincoln Continental 10.4   8 460.0 215  3.00 5.424 17.82  0   0     3      4 #> Chrysler Imperial   14.7   8 440.0 230  3.23 5.345 17.42  0   0     3      4 #> Fiat 128            32.4   4  78.7  66  4.08 2.200 19.47  1   1     4      1 #> Honda Civic         30.4   4  75.7  52  4.93 1.615 18.52  1   1     4      2 #> Toyota Corolla      33.9   4  71.1  65  4.22 1.835 19.90  1   1     4      1 #> Toyota Corona       21.5   4 120.1  97  3.70 2.465 20.01  1   0     3      1 #> Dodge Challenger    15.5   8 318.0 150  2.76 3.520 16.87  0   0     3      2 #> AMC Javelin         15.2   8 304.0 150  3.15 3.435 17.30  0   0     3      2 #> Camaro Z28          13.3   8 350.0 245  3.73 3.840 15.41  0   0     3      4 #> Pontiac Firebird    19.2   8 400.0 175  3.08 3.845 17.05  0   0     3      2 #> Fiat X1-9           27.3   4  79.0  66  4.08 1.935 18.90  1   1     4      1 #> Porsche 914-2       26.0   4 120.3  91  4.43 2.140 16.70  0   1     5      2 #> Lotus Europa        30.4   4  95.1 113  3.77 1.513 16.90  1   1     5      2 #> Ford Pantera L      15.8   8 351.0 264  4.22 3.170 14.50  0   1     5      4 #> Ferrari Dino        19.7   6 145.0 175  3.62 2.770 15.50  0   1     5      6 #> Maserati Bora       15.0   8 301.0 335  3.54 3.570 14.60  0   1     5      8 #> Volvo 142E          21.4   4 121.0 109  4.11 2.780 18.60  1   1     4      2"},{"path":"https://nrennie.rbind.io/messy/reference/messy_datetime_tzones.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the timezone of datetime columns — messy_datetime_tzones","title":"Change the timezone of datetime columns — messy_datetime_tzones","text":"Takes number datetime columns changes timezones either totally random, user-provided list timezones.","code":""},{"path":"https://nrennie.rbind.io/messy/reference/messy_datetime_tzones.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the timezone of datetime columns — messy_datetime_tzones","text":"","code":"messy_datetime_tzones(data, cols = NULL, tzones = OlsonNames(), force = FALSE)"},{"path":"https://nrennie.rbind.io/messy/reference/messy_datetime_tzones.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the timezone of datetime columns — messy_datetime_tzones","text":"data input dataframe cols set columns apply transformation . NULL apply POSIXt columns. tzones Valid time zones sample . default samples OlsonNames(), can set options relevant data. force default (force = FALSE) datetimes actual hour/minute values changed along timezones. force = TRUE, requires lubridate, datetime values remain timezone differ.","code":""},{"path":"https://nrennie.rbind.io/messy/reference/messy_datetime_tzones.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change the timezone of datetime columns — messy_datetime_tzones","text":"dataframe size input data.","code":""},{"path":[]},{"path":"https://nrennie.rbind.io/messy/reference/messy_datetime_tzones.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Change the timezone of datetime columns — messy_datetime_tzones","text":"Jack Davison","code":""},{"path":"https://nrennie.rbind.io/messy/reference/messy_datetime_tzones.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change the timezone of datetime columns — messy_datetime_tzones","text":"","code":"data <- data.frame(dates = rep(Sys.time(), 10))  data$dates #>  [1] \"2025-08-15 23:02:05 UTC\" \"2025-08-15 23:02:05 UTC\" #>  [3] \"2025-08-15 23:02:05 UTC\" \"2025-08-15 23:02:05 UTC\" #>  [5] \"2025-08-15 23:02:05 UTC\" \"2025-08-15 23:02:05 UTC\" #>  [7] \"2025-08-15 23:02:05 UTC\" \"2025-08-15 23:02:05 UTC\" #>  [9] \"2025-08-15 23:02:05 UTC\" \"2025-08-15 23:02:05 UTC\" attr(data$dates, \"tzone\") #> NULL  messy <- messy_datetime_tzones(data, tzones = \"Poland\") messy$dates #>  [1] \"2025-08-16 01:02:05 CEST\" \"2025-08-16 01:02:05 CEST\" #>  [3] \"2025-08-16 01:02:05 CEST\" \"2025-08-16 01:02:05 CEST\" #>  [5] \"2025-08-16 01:02:05 CEST\" \"2025-08-16 01:02:05 CEST\" #>  [7] \"2025-08-16 01:02:05 CEST\" \"2025-08-16 01:02:05 CEST\" #>  [9] \"2025-08-16 01:02:05 CEST\" \"2025-08-16 01:02:05 CEST\" attr(messy$dates, \"tzone\") #> [1] \"Poland\""},{"path":"https://nrennie.rbind.io/messy/reference/split-dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Splits date(time) column(s) into multiple columns — split_datetimes","title":"Splits date(time) column(s) into multiple columns — split_datetimes","text":"functions can split \"date\" \"time\" components POSIXt columns \"hour\", \"month\", \"day\" components Date columns multiple columns.","code":""},{"path":"https://nrennie.rbind.io/messy/reference/split-dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Splits date(time) column(s) into multiple columns — split_datetimes","text":"","code":"split_datetimes(data, cols = NULL, class = c(\"character\", \"date\"))  split_dates(data, cols = NULL)"},{"path":"https://nrennie.rbind.io/messy/reference/split-dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Splits date(time) column(s) into multiple columns — split_datetimes","text":"data input dataframe cols set columns apply transformation . NULL apply POSIXt columns (split_datetimes()) Date columns (split_dates()). class split_datetimes(). desired output separate \"date\" \"time\" columns. \"character\" leaves columns character vectors. \"date\" reformat date \"Date\" time \"POSIXct\" object, dummy date appended . split_dates(), returned columns integers.","code":""},{"path":"https://nrennie.rbind.io/messy/reference/split-dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Splits date(time) column(s) into multiple columns — split_datetimes","text":"dataframe","code":""},{"path":[]},{"path":"https://nrennie.rbind.io/messy/reference/split-dates.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Splits date(time) column(s) into multiple columns — split_datetimes","text":"Jack Davison","code":""},{"path":"https://nrennie.rbind.io/messy/reference/split-dates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Splits date(time) column(s) into multiple columns — split_datetimes","text":"","code":"# split datetimes data <- data.frame(today = Sys.time()) split_datetimes(data) #>   today_date today_time #> 1 2025/08/15   23:02:05 # split dates data <- data.frame(today = Sys.Date()) data #>        today #> 1 2025-08-15 split_dates(data) #>   today_year today_month today_day #> 1       2025           8        15"},{"path":"https://nrennie.rbind.io/messy/news/index.html","id":"messy-development-version","dir":"Changelog","previous_headings":"","what":"messy (development version)","title":"messy (development version)","text":"Add change_separators() function Add duplicate_columns() function Fix duplicate_rows() avoid destroying existing columns. result different outputs compared previous version, random seed.","code":""},{"path":"https://nrennie.rbind.io/messy/news/index.html","id":"messy-010","dir":"Changelog","previous_headings":"","what":"messy 0.1.0","title":"messy 0.1.0","text":"CRAN release: 2024-12-03 CRAN release Add duplicate_rows() function messy_datetime_tzones() randomly set different timezones datetime columns messy_datetime_formats() messy_date_formats() format date(times) characters, scramble strptime formats. split_datetimes() split_dates() split datetime columns “date” “time” columns, Date columns “year”, “month”, “day” columns.","code":""},{"path":"https://nrennie.rbind.io/messy/news/index.html","id":"messy-002","dir":"Changelog","previous_headings":"","what":"messy 0.0.2","title":"messy 0.0.2","text":"Add pkgdown site Add lintr file Add messy_colnames() function Add messy_strings() function","code":""},{"path":"https://nrennie.rbind.io/messy/news/index.html","id":"messy-001","dir":"Changelog","previous_headings":"","what":"messy 0.0.1","title":"messy 0.0.1","text":"Add add_whitespaces() function Add make_missing() function Add change_case() function Add initial messy() function Package initialisation","code":""}]
